[{"/Users/elshemm/Documents/React/climbing/climbing-app/src/index.js":"1","/Users/elshemm/Documents/React/climbing/climbing-app/src/App.js":"2","/Users/elshemm/Documents/React/climbing/climbing-app/src/components/NavBar/NavBar.js":"3","/Users/elshemm/Documents/React/climbing/climbing-app/src/components/Dashboard/Dashboard.js":"4","/Users/elshemm/Documents/React/climbing/climbing-app/src/components/Climb/Climb.js":"5","/Users/elshemm/Documents/React/climbing/climbing-app/src/components/Form.js":"6","/Users/elshemm/Documents/GitHub/climbing-app/src/index.js":"7","/Users/elshemm/Documents/GitHub/climbing-app/src/App.js":"8","/Users/elshemm/Documents/GitHub/climbing-app/src/components/Dashboard/Dashboard.js":"9","/Users/elshemm/Documents/GitHub/climbing-app/src/components/NavBar/NavBar.js":"10","/Users/elshemm/Documents/GitHub/climbing-app/src/components/Form.js":"11","/Users/elshemm/Documents/GitHub/climbing-app/src/components/ClimbInstance/ClimbInstance.js":"12","/Users/elshemm/Documents/GitHub/climbing-app/src/components/Climb/Climbs.js":"13","/Users/elshemm/Documents/GitHub/climbing-app/src/components/Users/Users.js":"14","/Users/elshemm/Documents/GitHub/climbing-app/src/components/Users/UserInstance.js":"15"},{"size":170,"mtime":1634146599080,"results":"16","hashOfConfig":"17"},{"size":285,"mtime":1634177657303,"results":"18","hashOfConfig":"17"},{"size":1130,"mtime":1634164017508,"results":"19","hashOfConfig":"17"},{"size":667,"mtime":1634179065307,"results":"20","hashOfConfig":"17"},{"size":578,"mtime":1634179028649,"results":"21","hashOfConfig":"17"},{"size":2830,"mtime":1634181017082,"results":"22","hashOfConfig":"17"},{"size":170,"mtime":1634146599080,"results":"23","hashOfConfig":"24"},{"size":285,"mtime":1634177657303,"results":"25","hashOfConfig":"24"},{"size":2659,"mtime":1634312926866,"results":"26","hashOfConfig":"24"},{"size":1137,"mtime":1634222958568,"results":"27","hashOfConfig":"24"},{"size":3849,"mtime":1634250491293,"results":"28","hashOfConfig":"24"},{"size":2358,"mtime":1634313852865,"results":"29","hashOfConfig":"24"},{"size":524,"mtime":1634310900317,"results":"30","hashOfConfig":"24"},{"size":267,"mtime":1634254085599,"results":"31","hashOfConfig":"24"},{"size":521,"mtime":1634254013787,"results":"32","hashOfConfig":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fzau7i",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uwgrt5",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elshemm/Documents/React/climbing/climbing-app/src/index.js",[],"/Users/elshemm/Documents/React/climbing/climbing-app/src/App.js",[],"/Users/elshemm/Documents/React/climbing/climbing-app/src/components/NavBar/NavBar.js",["66","67","68","69"],"/Users/elshemm/Documents/React/climbing/climbing-app/src/components/Dashboard/Dashboard.js",["70"],"/Users/elshemm/Documents/React/climbing/climbing-app/src/components/Climb/Climb.js",["71"],"/Users/elshemm/Documents/React/climbing/climbing-app/src/components/Form.js",["72"],"/Users/elshemm/Documents/GitHub/climbing-app/src/index.js",[],"/Users/elshemm/Documents/GitHub/climbing-app/src/App.js",[],"/Users/elshemm/Documents/GitHub/climbing-app/src/components/Dashboard/Dashboard.js",["73"],"import React, { useState } from 'react';\nimport Form from '../Form'\nimport Climbs from '../Climb/Climbs'\nimport Users from '../Users/Users'\nimport './Dashboard.css';\n\nfunction Dashboard(){\n\n  const[climbList, setClimbList] = useState([]);\n  const[userList, setUserList] = useState([]);\n  \n  \n  const addClimb = (climb) => {\n    const newClimbList =[climb,...climbList];\n    setClimbList(newClimbList);\n    /* check if user is in userList. \n    T-update nClimbs. F-addUser*/\n    if(userList.some(user => user.username === climb.username)) {\n      updateUser(climb.username, 1);\n    } else{\n      addUser(climb.username);\n    };\n    \n  }\n\n  const addUser = (username) => {\n    const user ={username: username, nClimbs:1};\n    const newUserList =[...userList, user];\n    setUserList(newUserList);\n  }\n\n  const deleteUser= (username) => {\n    let newUserList = [...userList];\n    const userIndex = newUserList.findIndex(user => user.username === username);\n    newUserList = newUserList.slice(0, userIndex).concat(newUserList.slice(userIndex+1, newUserList.length));\n    setUserList(newUserList);\n  }\n\n  \n  const updateUser = (username, value) => {\n    const newUserList = [...userList];\n    const userIndex = newUserList.findIndex(user => user.username === username);\n    newUserList[userIndex].nClimbs = newUserList[userIndex].nClimbs +value;\n    setUserList(newUserList);\n    /*check if nClimbs=0. if so, call function to delete user*/\n    if(userList[userIndex].nClimbs==0) {\n      deleteUser(username); }\n  }\n\n  const addLike = (climbToUpdate) => {\n    const newClimbList = [...climbList];\n    const climbIndex = newClimbList.findIndex(climb => climb.id === climbToUpdate.id);\n    newClimbList[climbIndex].likes = newClimbList[climbIndex].likes +1;\n    setClimbList(newClimbList);\n  }\n\n  const deleteClimb = (climbToDelete) => {\n    let newClimbList = [...climbList];\n    const climbIndex = newClimbList.findIndex(climb => climb.id === climbToDelete.id);\n    newClimbList = newClimbList.slice(0, climbIndex).concat(newClimbList.slice(climbIndex+1, climbIndex.length));\n    setClimbList(newClimbList);\n    updateUser(climbToDelete.username, -1);\n    \n  }\n\n  return (\n    <div className='dashboard-container'> \n        <Form onSubmit={addClimb}/>\n\n        <div className='climb-list-container'>\n          <h1 className='dash-title'>Recent Climbs</h1>\n            <Climbs climbList={climbList} addLike={addLike} deleteClimb={deleteClimb}/>\n        </div>\n        <div className='climber-list-container'>\n          <h1 className='dash-title'>Climbers</h1>\n          <Users userList={userList}/>\n        </div>\n      </div>\n      \n  )\n}\nexport default Dashboard;\n","/Users/elshemm/Documents/GitHub/climbing-app/src/components/NavBar/NavBar.js",["74","75","76","77"],"import React from 'react'\nimport logo  from './logo.svg'\nimport './NavBar.css'\n \nclass NavBar extends React.Component {\n    state = {clicked: false}\n\n    handleClick = () => {\n        this.setState({clicked:!this.state.clicked})\n    }\n\n    render() {\n        return(\n            <nav className='NavBarItems'>\n                <div className='navbar-logo'> Chicago Climbing Connection\n                    <img src={logo} className='logo' alt='logo'/>\n                </div>\n                \n                <ul className='nav-menu'>\n                    <li>\n                        <a className='navbar-item' href=''>Dashboard</a>\n                    </li>\n                    <li>\n                        <a className='navbar-item' href=''>Find a Partner</a>\n                    </li>\n                    <li>\n                        <a className='navbar-item' href=''>Challenges</a>\n                    </li>\n                    <li>\n                        <a className='navbar-item' href=''>Gear Trade</a>\n                    </li>\n                    \n                </ul>\n            </nav>\n\n        )\n    }\n}\n\nexport default NavBar","/Users/elshemm/Documents/GitHub/climbing-app/src/components/Form.js",["78"],"import React, { useState, setState } from 'react';\nimport './Dashboard/Dashboard.css';\n\nfunction Form(props) {\n\n  const[climbInfo, setClimbInfo] = useState({\n      username: '',\n      date: '',\n      gym: '',\n      climbType: '',\n      grade: '',\n      rating: '',\n      likes: 0,\n      id: 0,\n      comments: {},\n  })\n\n  const[idCounter, setIdCounter] = useState(0)\n\n  \n\n  const handleGymInputChange = (event) => {\n    setClimbInfo({...climbInfo, gym: event.target.value})\n} \n\nconst handleGradeInputChange = (event) => {\n    setClimbInfo({...climbInfo, grade: event.target.value})\n} \n\n  const handleClimbTypeInputChange = (event) => {\n      setClimbInfo({...climbInfo, climbType: event.target.value})\n  } \n\n  const handleRatingInputChange = (event) => {\n    setClimbInfo({...climbInfo, rating: event.target.value})\n} \n\n  const handleUsernameInputChange = (event) => {\n      setClimbInfo({...climbInfo, username: event.target.value})\n  }\n\n  const handleDateInputChange = (event) => {\n      setClimbInfo({...climbInfo, date: event.target.value})\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.onSubmit(climbInfo);\n    event.target.reset();\n    const newId = idCounter +1;\n    setIdCounter(newId);\n    setClimbInfo({likes: 0, id: newId});\n  }\n\n  return (\n    \n      <div className='form-container'>\n          <form className='form' onSubmit={handleSubmit}>\n              \n              \n              <h1 className='dash-title'>Submit a Climb</h1>\n              <input\n                  onChange={handleUsernameInputChange}\n                  value={climbInfo.username}\n                  className='form-field'\n                  type='text'\n                  placeholder='Username'\n                  name='username'\n              />\n              <input\n                  onChange={handleDateInputChange}\n                  value={climbInfo.date}\n                  className='form-field'\n                  type='text'\n                  placeholder='Date'\n                  name='date'\n              />\n              <select id='gym' className='form-field' name='gym' onChange={handleGymInputChange}>\n                  <option selected value='gym-select'>Select Gym</option>\n                  <option value='BKB West Loop'>BKB West Loop</option>\n                  <option value='BKB Lincoln Park'>BKB Lincoln Park</option>\n                  <option value='FA Avondale'>FA Avondale</option>\n                  \n              </select>\n              \n              <select id='climbType' className='form-field' name='climbType' onChange={handleClimbTypeInputChange}>\n                  <option selected value='climbType-select'>Select Climb Type</option>\n                  <option value='Boulder'>Boulder</option>\n                  <option value='Top Rope'>Top Rope</option>\n                  <option value='Lead'>Lead</option>\n              </select>\n\n              <input\n                  onChange={handleGradeInputChange}\n                  value={climbInfo.grade}\n                  className='form-field'\n                  type='text'\n                  placeholder='Grade'\n                  name='grade'\n              />\n              \n              <select id='rating' className='form-field' name='rating' onChange={handleRatingInputChange}>\n                  <option selected value='rating-select'>Select Rating</option>\n                  <option value='1'>1 Star</option>\n                  <option value='2'>2 Stars</option>\n                  <option value='3'>3 Stars</option>\n                  <option value='4'>4 Stars</option>\n                  <option value='5'>5 Stars</option>\n              </select>\n              \n              <button className='form-field' type='submit'>\n                  Submit\n              </button>\n\n          </form>\n        </div>\n\n        \n      \n      \n  )\n}\n\nexport default Form;\n","/Users/elshemm/Documents/GitHub/climbing-app/src/components/ClimbInstance/ClimbInstance.js",[],"/Users/elshemm/Documents/GitHub/climbing-app/src/components/Climb/Climbs.js",[],"/Users/elshemm/Documents/GitHub/climbing-app/src/components/Users/Users.js",[],"/Users/elshemm/Documents/GitHub/climbing-app/src/components/Users/UserInstance.js",[],{"ruleId":"79","severity":1,"message":"80","line":21,"column":25,"nodeType":"81","endLine":21,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":24,"column":25,"nodeType":"81","endLine":24,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":27,"column":25,"nodeType":"81","endLine":27,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":30,"column":25,"nodeType":"81","endLine":30,"endColumn":60},{"ruleId":"82","severity":1,"message":"83","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":35},{"ruleId":"82","severity":1,"message":"86","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"88","line":46,"column":35,"nodeType":"89","messageId":"90","endLine":46,"endColumn":37},{"ruleId":"79","severity":1,"message":"80","line":21,"column":25,"nodeType":"81","endLine":21,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":24,"column":25,"nodeType":"81","endLine":24,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":27,"column":25,"nodeType":"81","endLine":27,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":30,"column":25,"nodeType":"81","endLine":30,"endColumn":60},{"ruleId":"82","severity":1,"message":"83","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":35},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setState' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]