{"ast":null,"code":"var _jsxFileName = \"/Users/elshemm/Documents/GitHub/climbing-app-code/src/components/Dashboard/DashboardTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Form from '../Form';\nimport Climbs from '../Climb/Climbs';\nimport Users from '../Users/Users';\nimport { db } from \"../../firebase-config\";\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DashboardTest() {\n  _s();\n\n  const [newName, setNewName] = useState(\"\");\n  const [newAge, setNewAge] = useState(0);\n  const [climbList, setClimbList] = useState([]);\n  const climbsCollectionRef = collection(db, \"climbs\");\n  useEffect(() => {\n    const getClimbs = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setClimbList(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getClimbs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: users.map(climb => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name: \", climb.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashboardTest, \"MIpZO91iRhGxmE7L9S0axxICBHU=\");\n\n_c = DashboardTest;\nexport default DashboardTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardTest\");","map":{"version":3,"sources":["/Users/elshemm/Documents/GitHub/climbing-app-code/src/components/Dashboard/DashboardTest.js"],"names":["React","useState","useEffect","Form","Climbs","Users","db","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","DashboardTest","newName","setNewName","newAge","setNewAge","climbList","setClimbList","climbsCollectionRef","getClimbs","data","usersCollectionRef","docs","map","id","users","climb","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,EAAT,QAAmB,uBAAnB;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,GANF,QAOO,oBAPP;AASA,OAAO,iBAAP;;;AAGA,SAASC,aAAT,GAAwB;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACE,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAK,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAMmB,mBAAmB,GAAGb,UAAU,CAACD,EAAD,EAAK,QAAL,CAAtC;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAG,YAAY;AAC5B,YAAMC,IAAI,GAAG,MAAMd,OAAO,CAACe,kBAAD,CAA1B;AACAJ,MAAAA,YAAY,CAACG,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAeb,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACU,IAAJ,EAAL;AAAiBI,QAAAA,EAAE,EAAEd,GAAG,CAACc;AAAzB,OAAV,CAAd,CAAD,CAAZ;AACD,KAHD;;AAKAL,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAIGM,KAAK,CAACF,GAAN,CAAWG,KAAD,IAAW;AACpB,0BACE;AAAA,mBACG,GADH,eAEE;AAAA,+BAAWA,KAAK,CAACC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GApCQhB,a;;KAAAA,a;AAqCT,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Form from '../Form';\nimport Climbs from '../Climb/Climbs';\nimport Users from '../Users/Users';\nimport { db } from \"../../firebase-config\";\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nimport './Dashboard.css';\n\n\nfunction DashboardTest(){\nconst [newName, setNewName] = useState(\"\");\n  const [newAge, setNewAge] = useState(0);\n\n  const[climbList, setClimbList] = useState([]);\n  const climbsCollectionRef = collection(db, \"climbs\");\n\n  \n\n  useEffect(() => {\n    const getClimbs = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setClimbList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n    };\n\n    getClimbs();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      \n\n      \n      {users.map((climb) => {\n        return (\n          <div>\n            {\" \"}\n            <h1>Name: {climb.username}</h1>\n            \n            \n          </div>\n        );\n      })}\n    </div>\n  );\n  \n}\nexport default DashboardTest;\n"]},"metadata":{},"sourceType":"module"}