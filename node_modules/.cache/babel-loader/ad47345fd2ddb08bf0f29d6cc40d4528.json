{"ast":null,"code":"var _jsxFileName = \"/Users/elshemm/Documents/React/climbing/climbing-app/src/components/Climb/Climb.js\";\nimport React, { useState } from 'react';\nimport './Climb.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Climb = ({\n  climbList\n}) => {\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this));\n};\n\n_c = Climb;\nexport default Climb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Climb\");","map":{"version":3,"sources":["/Users/elshemm/Documents/React/climbing/climbing-app/src/components/Climb/Climb.js"],"names":["React","useState","Climb","climbList","todos","map","todo","index","isComplete","completeTodo","id","text","removeTodo","setEdit","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAE3B,SAAOC,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AACE,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADrD;AAAA,4BAIE;AAAmB,MAAA,OAAO,EAAE,MAAMC,YAAY,CAACH,IAAI,CAACI,EAAN,CAA9C;AAAA,gBACGJ,IAAI,CAACK;AADR,OAAUL,IAAI,CAACI,EAAf;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAE,MAAME,UAAU,CAACN,IAAI,CAACI,EAAN,CAD3B;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMG,OAAO,CAAC;AAAEH,UAAAA,EAAE,EAAEJ,IAAI,CAACI,EAAX;AAAeI,UAAAA,KAAK,EAAER,IAAI,CAACK;AAA3B,SAAD,CADxB;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,KAEOJ,KAFP;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAuBH,CAzBD;;KAAML,K;AA2BN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport './Climb.css';\n\n\nconst Climb = ({climbList}) => {\n    \n    return todos.map((todo, index) => (\n        <div\n          className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n          key={index}\n        >\n          <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n            {todo.text}\n          </div>\n          <div className='icons'>\n            <RiCloseCircleLine\n              onClick={() => removeTodo(todo.id)}\n              className='delete-icon'\n            />\n            <TiEdit\n              onClick={() => setEdit({ id: todo.id, value: todo.text })}\n              className='edit-icon'\n            />\n          </div>\n        </div>\n      ));\n        \n        \n      \n};\n\nexport default Climb;"]},"metadata":{},"sourceType":"module"}