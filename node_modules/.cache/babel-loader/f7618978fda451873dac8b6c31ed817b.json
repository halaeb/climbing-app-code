{"ast":null,"code":"var _jsxFileName = \"/Users/elshemm/Documents/GitHub/climbing-app/src/components/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Form from '../Form';\nimport Climbs from '../Climb/Climbs';\nimport Users from '../Users/Users';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [climbList, setClimbList] = useState([]);\n  const [userList, setUserList] = useState([]);\n\n  const addClimb = climb => {\n    const newClimbList = [climb, ...climbList];\n    setClimbList(newClimbList);\n    /* check if user is in userList. \n    T-update nClimbs. F-addUser*/\n\n    if (userList.some(user => user.username === climb.username)) {\n      updateUser(climb.username, 1);\n    } else {\n      addUser(climb.username);\n    }\n\n    ;\n  };\n\n  const addUser = username => {\n    const user = {\n      username: username,\n      nClimbs: 1\n    };\n    const newUserList = [...userList, user];\n    setUserList(newUserList);\n  };\n\n  const updateUser = (username, value) => {\n    const newUserList = [...userList];\n    const userIndex = newUserList.findIndex(user => user.username === username);\n    newUserList[userIndex].nClimbs = newUserList[userIndex].nClimbs + value;\n    /*check if nClimbs=0. if so, call function to delete user*/\n\n    setUserList(newUserList);\n  };\n\n  const addLike = climbToUpdate => {\n    const newClimbList = [...climbList];\n    const climbIndex = newClimbList.findIndex(climb => climb.id === climbToUpdate.id);\n    newClimbList[climbIndex].likes = newClimbList[climbIndex].likes + 1;\n    setClimbList(newClimbList);\n  };\n\n  const deleteClimb = climbToDelete => {\n    let newClimbList = [...climbList];\n    const climbIndex = newClimbList.findIndex(climb => climb.id === climbToDelete.id);\n    newClimbList = newClimbList.slice(0, climbIndex).concat(newClimbList.slice(climbIndex + 1, climbIndex.length));\n    setClimbList(newClimbList);\n    updateUser(climbToDelete.username, -1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: addClimb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"climb-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dash-title\",\n        children: \"Recent Climbs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Climbs, {\n        climbList: climbList,\n        addLike: addLike,\n        deleteClimb: deleteClimb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"climber-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dash-title\",\n        children: \"Climbers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        userList: userList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"QQmkUawe4yIVsuT4TKTdT8aSSGA=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/elshemm/Documents/GitHub/climbing-app/src/components/Dashboard/Dashboard.js"],"names":["React","useState","Form","Climbs","Users","Dashboard","climbList","setClimbList","userList","setUserList","addClimb","climb","newClimbList","some","user","username","updateUser","addUser","nClimbs","newUserList","value","userIndex","findIndex","addLike","climbToUpdate","climbIndex","id","likes","deleteClimb","climbToDelete","slice","concat","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Form from '../Form'\nimport Climbs from '../Climb/Climbs'\nimport Users from '../Users/Users'\nimport './Dashboard.css';\n\nfunction Dashboard(){\n\n  const[climbList, setClimbList] = useState([]);\n  const[userList, setUserList] = useState([]);\n  \n  \n  const addClimb = (climb) => {\n    const newClimbList =[climb,...climbList];\n    setClimbList(newClimbList);\n    /* check if user is in userList. \n    T-update nClimbs. F-addUser*/\n    if(userList.some(user => user.username === climb.username)) {\n      updateUser(climb.username, 1);\n    } else{\n      addUser(climb.username);\n    };\n    \n  }\n\n  const addUser = (username) => {\n    const user ={username: username, nClimbs:1};\n    const newUserList =[...userList, user];\n    setUserList(newUserList);\n  }\n\n  \n  const updateUser = (username, value) => {\n    const newUserList = [...userList];\n    const userIndex = newUserList.findIndex(user => user.username === username);\n    newUserList[userIndex].nClimbs = newUserList[userIndex].nClimbs +value;\n    /*check if nClimbs=0. if so, call function to delete user*/\n    setUserList(newUserList);\n  }\n\n  const addLike = (climbToUpdate) => {\n    const newClimbList = [...climbList];\n    const climbIndex = newClimbList.findIndex(climb => climb.id === climbToUpdate.id);\n    newClimbList[climbIndex].likes = newClimbList[climbIndex].likes +1;\n    setClimbList(newClimbList);\n  }\n\n  const deleteClimb = (climbToDelete) => {\n    let newClimbList = [...climbList];\n    const climbIndex = newClimbList.findIndex(climb => climb.id === climbToDelete.id);\n    newClimbList = newClimbList.slice(0, climbIndex).concat(newClimbList.slice(climbIndex+1, climbIndex.length))\n    setClimbList(newClimbList);\n    updateUser(climbToDelete.username, -1);\n  }\n\n  return (\n    <div className='dashboard-container'> \n        <Form onSubmit={addClimb}/>\n\n        <div className='climb-list-container'>\n          <h1 className='dash-title'>Recent Climbs</h1>\n            <Climbs climbList={climbList} addLike={addLike} deleteClimb={deleteClimb}/>\n        </div>\n        <div className='climber-list-container'>\n          <h1 className='dash-title'>Climbers</h1>\n          <Users userList={userList}/>\n        </div>\n      </div>\n      \n  )\n}\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}