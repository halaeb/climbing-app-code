{"ast":null,"code":"import _toConsumableArray from\"/Users/elshemm/Documents/GitHub/climbing-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/elshemm/Documents/GitHub/climbing-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Form from'../Form';import Climbs from'../Climb/Climbs';import Users from'../Users/Users';import'./Dashboard.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),climbList=_useState2[0],setClimbList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),userList=_useState4[0],setUserList=_useState4[1];var addClimb=function addClimb(climb){var newClimbList=[climb].concat(_toConsumableArray(climbList));setClimbList(newClimbList);/* check if user is in userList. \n    T-update nClimbs. F-addUser*/if(userList.some(function(user){return user.username===climb.username;})){updateUser(climb.username,1);}else{addUser(climb.username);};};var addUser=function addUser(username){var user={username:username,nClimbs:1};var newUserList=[].concat(_toConsumableArray(userList),[user]);setUserList(newUserList);};var deleteUser=function deleteUser(username){var newUserList=_toConsumableArray(userList);var userIndex=newUserList.findIndex(function(user){return user.username===username;});newUserList=newUserList.slice(0,userIndex).concat(newUserList.slice(userIndex+1,newUserList.length));setUserList(newUserList);};var updateUser=function updateUser(username,value){var newUserList=_toConsumableArray(userList);var userIndex=newUserList.findIndex(function(user){return user.username===username;});newUserList[userIndex].nClimbs=newUserList[userIndex].nClimbs+value;setUserList(newUserList);/*check if nClimbs=0. if so, call function to delete user*/if(userList[userIndex].nClimbs==0){deleteUser(username);}};var addLike=function addLike(climbToUpdate){var newClimbList=_toConsumableArray(climbList);var climbIndex=newClimbList.findIndex(function(climb){return climb.id===climbToUpdate.id;});newClimbList[climbIndex].likes=newClimbList[climbIndex].likes+1;setClimbList(newClimbList);};var deleteClimb=function deleteClimb(climbToDelete){var newClimbList=_toConsumableArray(climbList);var climbIndex=newClimbList.findIndex(function(climb){return climb.id===climbToDelete.id;});newClimbList=newClimbList.slice(0,climbIndex).concat(newClimbList.slice(climbIndex+1,climbIndex.length));setClimbList(newClimbList);updateUser(climbToDelete.username,-1);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(Form,{onSubmit:addClimb}),/*#__PURE__*/_jsxs(\"div\",{className:\"climb-list-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"dash-title\",children:\"Recent Climbs\"}),/*#__PURE__*/_jsx(Climbs,{climbList:climbList,addLike:addLike,deleteClimb:deleteClimb})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"climber-list-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"dash-title\",children:\"Climbers\"}),/*#__PURE__*/_jsx(Users,{userList:userList})]})]});}export default Dashboard;","map":{"version":3,"sources":["/Users/elshemm/Documents/GitHub/climbing-app/src/components/Dashboard/Dashboard.js"],"names":["React","useState","Form","Climbs","Users","Dashboard","climbList","setClimbList","userList","setUserList","addClimb","climb","newClimbList","some","user","username","updateUser","addUser","nClimbs","newUserList","deleteUser","userIndex","findIndex","slice","concat","length","value","addLike","climbToUpdate","climbIndex","id","likes","deleteClimb","climbToDelete"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Form from '../Form'\nimport Climbs from '../Climb/Climbs'\nimport Users from '../Users/Users'\nimport './Dashboard.css';\n\nfunction Dashboard(){\n\n  const[climbList, setClimbList] = useState([]);\n  const[userList, setUserList] = useState([]);\n  \n  \n  const addClimb = (climb) => {\n    const newClimbList =[climb,...climbList];\n    setClimbList(newClimbList);\n    /* check if user is in userList. \n    T-update nClimbs. F-addUser*/\n    if(userList.some(user => user.username === climb.username)) {\n      updateUser(climb.username, 1);\n    } else{\n      addUser(climb.username);\n    };\n    \n  }\n\n  const addUser = (username) => {\n    const user ={username: username, nClimbs:1};\n    const newUserList =[...userList, user];\n    setUserList(newUserList);\n  }\n\n  const deleteUser= (username) => {\n    let newUserList = [...userList];\n    const userIndex = newUserList.findIndex(user => user.username === username);\n    newUserList = newUserList.slice(0, userIndex).concat(newUserList.slice(userIndex+1, newUserList.length));\n    setUserList(newUserList);\n  }\n\n  \n  const updateUser = (username, value) => {\n    const newUserList = [...userList];\n    const userIndex = newUserList.findIndex(user => user.username === username);\n    newUserList[userIndex].nClimbs = newUserList[userIndex].nClimbs +value;\n    setUserList(newUserList);\n    /*check if nClimbs=0. if so, call function to delete user*/\n    if(userList[userIndex].nClimbs==0) {\n      deleteUser(username); }\n  }\n\n  const addLike = (climbToUpdate) => {\n    const newClimbList = [...climbList];\n    const climbIndex = newClimbList.findIndex(climb => climb.id === climbToUpdate.id);\n    newClimbList[climbIndex].likes = newClimbList[climbIndex].likes +1;\n    setClimbList(newClimbList);\n  }\n\n  const deleteClimb = (climbToDelete) => {\n    let newClimbList = [...climbList];\n    const climbIndex = newClimbList.findIndex(climb => climb.id === climbToDelete.id);\n    newClimbList = newClimbList.slice(0, climbIndex).concat(newClimbList.slice(climbIndex+1, climbIndex.length));\n    setClimbList(newClimbList);\n    updateUser(climbToDelete.username, -1);\n    \n  }\n\n  return (\n    <div className='dashboard-container'> \n        <Form onSubmit={addClimb}/>\n\n        <div className='climb-list-container'>\n          <h1 className='dash-title'>Recent Climbs</h1>\n            <Climbs climbList={climbList} addLike={addLike} deleteClimb={deleteClimb}/>\n        </div>\n        <div className='climber-list-container'>\n          <h1 className='dash-title'>Climbers</h1>\n          <Users userList={userList}/>\n        </div>\n      </div>\n      \n  )\n}\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}